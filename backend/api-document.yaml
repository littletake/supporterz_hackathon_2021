openapi: 3.0.0
info:
  title: supporterz_hackathon_2021 API Document
  description: バックエンド API仕様
  version: '1.0'
  contact:
    name: Takeshi Haga
    email: ritorut18@gmail.com
servers:
  - url: 'http://localhost:1323'
tags:
  - name: setting
    description: 設定事項の出力
  - name: trip
    description: GPS情報抽出
  - name: user
    description: ユーザ関連
paths:
  /setting/get:
    get:
      tags:
        - setting
      summary: 設定取得API
      description: |
        設定事項の出力
        TODO: 設定をDBに保存し動的に変えられるようにする
      operationId: get-settings
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingGetResponse'
              examples:
                example-1:
                  value:
                    hello: hello
          headers: {}
      parameters: []
  /trip/save:
    post:
      tags:
        - trip
      summary: 旅情報保存API
      description: |
        アップロードされた写真を保存するAPI
      operationId: trip-save
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripSaveRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripSaveResponse'
      x-codegen-request-body-name: body
  /trip/get:
    get:
      summary: ''
      operationId: get-trip-get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  features:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        properties:
                          type: object
                          properties:
                            trip_id:
                              type: string
                        geometry:
                          type: object
                          properties:
                            type:
                              type: string
                            coordinates:
                              type: array
                              items:
                                type: number
              examples:
                example-1:
                  value:
                    type: FeatureCollection
                    features:
                      - type: Feature
                        properties:
                          trip_id: string
                        geometry:
                          type: Point
                          coordinates:
                            - -77.038659
                            - 38.931567
      description: 旅情報全体を取得するAPI
      parameters:
        - schema:
            type: string
          in: query
          name: trip_id
          description: 旅のID
          required: true
  '/static/{img_url}':
    get:
      tags:
        - trip
      summary: 画像のファイルサーバAPI
      description: |
        S3に保存した画像を取得するAPI
      parameters:
        - in: path
          name: img_url
          schema:
            type: string
          description: S3に保存した画像のURL
          required: true
      operationId: imgs-get
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripGetResponse'
      x-codegen-request-body-name: body
  /user/get:
    get:
      summary: /user/get
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  user_name:
                    type: string
              examples:
                example-1:
                  value:
                    user_id: c8fed8a1-7e15-4516-838a-14a6bc1f703f
                    user_name: aaa
      operationId: get-user
      parameters:
        - schema:
            type: string
          in: query
          name: user_id
          description: ユーザのID
          required: true
      description: ユーザ情報を取得するAPI
    parameters: []
  /user/create:
    post:
      summary: API to create user
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              examples:
                example-1:
                  value:
                    userID: aaa
                    userName: hata
      operationId: post-user-create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  type: string
                password:
                  type: string
            examples:
              example-1:
                value:
                  user_name: ccc
                  password: '333'
          application/xml:
            schema:
              type: object
              properties: {}
        description: API to create user
      description: ユーザを登録するAPI
  /user/get_trip:
    get:
      summary: API to get all trip_id
      tags:
        - trip
        - user
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  trip_id:
                    type: array
                    items:
                      type: string
              examples:
                example-1:
                  value:
                    trip_id:
                      - string
      operationId: get-user-get_trip
      parameters:
        - schema:
            type: string
          in: query
          name: user_id
          description: ユーザID
          required: true
components:
  schemas:
    SettingGetResponse:
      type: object
      properties:
        hello:
          type: string
      x-examples:
        example-1:
          value:
            hello: hello
    TripSaveRequest:
      type: object
      description: ''
      x-examples: {}
      properties:
        user_id:
          type: string
          description: ユーザID
        imgs:
          type: array
          description: 画像
          items:
            type: string
    TripSaveResponse:
      type: object
      properties:
        trip_id:
          type: string
          description: 旅ごとに固有のID
    TripGetRequest:
      type: object
      properties:
        userID:
          type: string
          description: ユーザID
    TripGetResponse:
      type: object
      properties:
        tripID:
          type: array
          description: 旅IDのリスト
  securitySchemes: {}
